akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  loggers = ["akka.event.Logging$DefaultLogger"]
  
  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"
 
  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "DEBUG"
  
  actor {
    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
    }
  }
  
  my-dispatcher-fj {
	  # Dispatcher is the name of the event-based dispatcher
	  type = Dispatcher
	  # What kind of ExecutionService to use
	  executor = "fork-join-executor"
	  # Configuration for the fork join pool
	  fork-join-executor {
	    # Min number of threads to cap factor-based parallelism number to
	    parallelism-min = 2
	    # Parallelism (threads) ... ceil(available processors * factor)
	    parallelism-factor = 10.0
	    # Max number of threads to cap factor-based parallelism number to
	    parallelism-max = 100
	  }
	  # Throughput defines the maximum number of messages to be
	  # processed per actor before the thread jumps to the next actor.
	  # Set to 1 for as fair as possible.
	  throughput = 1
	}
	
	
  my-dispatcher-tp {
	  # Dispatcher is the name of the event-based dispatcher
	  type = Dispatcher
	  executor = "thread-pool-executor"
  	  # Configuration for the thread pool
      thread-pool-executor {
    	# minimum number of threads to cap factor-based core number to
    	core-pool-size-min = 2
    	# No of core threads ... ceil(available processors * factor)
    	core-pool-size-factor = 100.0
    	# maximum number of threads to cap factor-based number to
    	core-pool-size-max = 1000
     }
  }
  
  my-dispatcher {
  	type = Dispatcher
  	executor = "thread-pool-executor"
  	thread-pool-executor {
    	fixed-pool-size = 1000
  	}
  	throughput = 1
  }
}